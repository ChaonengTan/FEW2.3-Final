{"version":3,"sources":["components/Home.js","components/Starwars.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","Starwars","useState","id","setID","data","setData","list","setList","charList","map","char","name","birth_year","height","gender","eye_color","homeworld","climate","films","film","title","type","placeholder","onChange","e","target","value","onClick","fetchData","a","fetch","res","json","detail","homeworldRes","homeworldJson","Promise","all","filmsRes","filmsJSON","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSASeA,MARf,WACE,OACE,qBAAKC,UAAU,OAAf,0C,2CCgGaC,MAjGjB,WACI,MAAoBC,qBAApB,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACMC,EAAWF,EAAKG,KAAI,SAAAC,GACtB,OACI,sBAAKX,UAAU,WAAf,UACI,gCACI,mDACA,yCAAYW,EAAKC,QACjB,yCAAYD,EAAKE,cACjB,2CAAcF,EAAKG,UACnB,2CAAcH,EAAKI,UACnB,8CAAiBJ,EAAKK,gBAE1B,gCACI,mDACA,2CAAcL,EAAKM,UAAUL,QAC7B,4CAAeD,EAAKM,UAAUC,cAElC,gCACI,uCACCP,EAAKQ,MAAMT,KAAI,SAAAU,GACZ,OACI,8BACKA,EAAKC,oBAQlC,OACI,sBAAKrB,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOsB,KAAK,OAAOC,YAAY,eAAcC,SAAU,SAAAC,GACnDrB,EAAMqB,EAAEC,OAAOC,UAEnB,wBAAQC,QAAS,SAAAH,IAxCjB,oCAyCII,CAAU1B,IADd,sBAIJ,qBAAKH,UAAU,OAAf,SACKK,GACG,gCACI,gCACI,mDACA,yCAAYA,EAAKO,QACjB,yCAAYP,EAAKQ,cACjB,2CAAcR,EAAKS,UACnB,2CAAcT,EAAKU,UACnB,8CAAiBV,EAAKW,gBAE1B,gCACI,mDACA,2CAAcX,EAAKY,UAAUL,QAC7B,4CAAeP,EAAKY,UAAUC,cAElC,gCACI,uCACCb,EAAKc,MAAMT,KAAI,SAAAU,GACZ,OACI,8BACKA,EAAKC,cAKtB,wBAAQO,QAAS,SAAAH,GACbjB,EAAQ,GAAD,mBAAKD,GAAL,CAAWF,MADtB,0BAOhB,qBAAKL,UAAU,WAAf,SACKO,GAAQE,OA9EL,4CAkFhB,WAAyBN,GAAzB,yBAAA2B,EAAA,sEACsBC,MAAM,gCAAD,OAAiC5B,EAAjC,MAD3B,cACU6B,EADV,gBAEuBA,EAAIC,OAF3B,WAEUA,EAFV,QAGaC,OAHb,iCAImCH,MAAME,EAAKhB,WAJ9C,cAIckB,EAJd,iBAKoCA,EAAaF,OALjD,eAKcG,EALd,iBAM+BC,QAAQC,IAAIL,EAAKd,MAAMT,KAAI,SAAAU,GAAI,OAAIW,MAAMX,OANxE,eAMcmB,EANd,iBAOgCF,QAAQC,IAAIC,EAAS7B,KAAI,SAAAsB,GAAG,OAAIA,EAAIC,WAPpE,QAOcO,EAPd,OAQQP,EAAKd,MAAQqB,EACbP,EAAKhB,UAAYmB,EACjB9B,EAAQ2B,GAVhB,6CAlFgB,wBCWLQ,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5f8a51e.chunk.js","sourcesContent":["import './style/Home.css'\nfunction Home() {\n  return (\n    <div className='home'>\n      Chaoneng Tan | FEW2.3 Final\n    </div>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport './style/Starwars.css'\nfunction Starwars() {\n    const [id, setID] = useState()\n    const [data, setData] = useState(null)\n    const [list, setList] = useState([])\n    const charList = list.map(char => {\n        return(\n            <div className='charCard'>\n                <div>\n                    <h2>Character Details</h2>\n                    <div>Name: {char.name}</div>\n                    <div>Year: {char.birth_year}</div>\n                    <div>Height: {char.height}</div>\n                    <div>Gender: {char.gender}</div>\n                    <div>Eye Color: {char.eye_color}</div>\n                </div>\n                <div>\n                    <h2>Homeworld Details</h2>\n                    <div>Planet: {char.homeworld.name}</div>\n                    <div>Climate: {char.homeworld.climate}</div>\n                </div>\n                <div>\n                    <h2>Films</h2>\n                    {char.films.map(film => {\n                        return(\n                            <div>\n                                {film.title}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    })\n    return (\n        <div className='content'>\n            <div className='interactable'>\n                <div className='input'>\n                    <input type='text' placeholder='Character ID'onChange={e => {\n                        setID(e.target.value)\n                    }}></input>\n                    <button onClick={e => {\n                        fetchData(id)\n                    }}>Enter</button>\n                </div>\n                <div className='data'>\n                    {data && \n                        <div>\n                            <div>\n                                <h2>Character Details</h2>\n                                <div>Name: {data.name}</div>\n                                <div>Year: {data.birth_year}</div>\n                                <div>Height: {data.height}</div>\n                                <div>Gender: {data.gender}</div>\n                                <div>Eye Color: {data.eye_color}</div>\n                            </div>\n                            <div>\n                                <h2>Homeworld Details</h2>\n                                <div>Planet: {data.homeworld.name}</div>\n                                <div>Climate: {data.homeworld.climate}</div>\n                            </div>\n                            <div>\n                                <h2>Films</h2>\n                                {data.films.map(film => {\n                                    return(\n                                        <div>\n                                            {film.title}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                            <button onClick={e => {\n                                setList([...list, data])\n                            }}>Save</button>\n                        </div>\n                    }\n                </div>\n            </div>\n            <div className='charList'>\n                {list && charList}\n            </div>\n      </div>\n    );\n    async function fetchData(id){\n        const res = await fetch(`https://swapi.dev/api/people/${id}/`)\n        const json = await res.json()\n        if(!json.detail){\n            const homeworldRes = await fetch(json.homeworld)\n            const homeworldJson = await homeworldRes.json()\n            const filmsRes = await Promise.all(json.films.map(film => fetch(film)))\n            const filmsJSON = await Promise.all(filmsRes.map(res => res.json()))\n            json.films = filmsJSON\n            json.homeworld = homeworldJson\n            setData(json)\n        }\n    }\n  }\n  \n  export default Starwars;\n  ","import './App.css';\nimport Home from './components/Home';\nimport Starwars from './components/Starwars';\n\nfunction App() {\n  return (\n    <div>\n      <Home/>\n      <Starwars/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}